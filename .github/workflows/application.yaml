name: Application-workflow

on:
  push:
    branches:
      - "*"
    tags:
      - "v*"
    paths-ignore:
      - "tracking-test/**"
      - ".github/**"
  
  pull_request:
    branches:
      - "*"
    paths-ignore:
      - "tracking-test/**"
      - ".github/**"

permissions:
  id-token: write
  contents: read
  issues: write
  pull-requests: write

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '^1.21'
    
    - name: Lint with golangci-lint
      uses: golangci/golangci-lint-action@v4
      with:
        version: v1.54
        skip-cache: true
        skip-pkg-cache: true
        skip-build-cache: true
    
    - name: Run Tests
      run: go test ./... -cover
  
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    needs: lint-and-test
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}  
      - name: Build image
        run: |
          docker buildx create --use
          docker buildx build --platform linux/amd64 --tag ethan510010/sre-web:${{ github.ref_name }} -f Dockerfile . --load
      
      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ethan510010/sre-web:${{ github.ref_name }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'    
      
      - name: Push Docker image to ECR
        run: |
          docker push ethan510010/sre-web:${{ github.ref_name }}
        
